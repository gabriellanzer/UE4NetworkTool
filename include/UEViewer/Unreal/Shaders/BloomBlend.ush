/******************************************************************************
 *	This shader blends blurred picture into the frame buffer
 *****************************************************************************/

// debug: visualize depth buffer in some fog-like manner
//#define SHOW_DEPTH

uniform sampler2D BlurTex;
uniform sampler2D OrigTex;
uniform sampler2D DepthTex;

void VertexShaderMain()
{
	gl_TexCoord[0] = gl_MultiTexCoord0;
	gl_Position    = ftransform();
}

#define BLOOM_SCALE		4.0

void PixelShaderMain()
{
	vec2 TexCoord = gl_TexCoord[0].st;
	vec4 Blur = texture2D(BlurTex, TexCoord);
	vec3 Orig = texture2D(OrigTex, TexCoord).rgb;
	vec4 c;
//	c = vec4(vec3(Blur.a) * BLOOM_SCALE, 1.0);	// show Blur.a
//	c = vec4(Blur * 1.0 + Orig * 1.0, 1.0);		//?? different formula
//	c = vec4(Blur * -9.0 + Orig * 10.0, 1.0);	// interesting effect (sharp image) ...
//	c = vec4(Blur * 0.5 + Orig * 0.5, 1.0);
//	c = vec4(Blur + Orig, 1.0);					// combine both with weights = 1
	c = vec4(Orig + Blur.rgb * Blur.a * BLOOM_SCALE, 1.0);
//	c = vec4(Blur * 1.0, 1.0);					// blur only
//	c = vec4(Orig, 1.0);						// unblurred image only

	gl_FragColor = c;

	// copy depth
	float f = texture2D(DepthTex, TexCoord).r;
	gl_FragDepth = f;

#ifdef SHOW_DEPTH
	f = 2.0 / (1000.0 - f * 1000.0);
	gl_FragColor = vec4(f, f, f, 1.0);
#endif
}
